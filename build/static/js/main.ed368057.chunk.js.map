{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","useState","todoList","setTodoList","id","title","completed","activeItem","setActiveItem","editing","setEditing","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","fetchTask","axios","get","then","res","data","useEffect","className","onSubmit","e","csrftoken","preventDefault","url","post","headers","catch","err","console","log","getElementById","reset","style","flex","onChange","value","target","type","placeholder","map","task","index","onClick","taskUpdate","strikeUnstrike","startEdit","delete","deleteItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ed368057.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios'\n\nfunction App(props) {\n  const [todoList, setTodoList] = useState([])\n  const [activeItem, setActiveItem] = useState({id: null, title: '', completed: false})\n  const [editing, setEditing] = useState(false)\n\n  function getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n  useEffect(() => {\n    fetchTask()\n    // return () => {\n    //   cleanup\n    // }\n  }, [])\n  function fetchTask(){\n    // console.log('fetching...')\n    axios.get(`http://127.0.0.1:8000/api/task-list/`)\n    .then( res => {\n      // console.log(res.data)\n    setTodoList(res.data)}\n    )\n    // .then(data => console.log(data))\n\n    // fetch('http://127.0.0.1:8000/api/task-list/')\n    // .then(response => response.json())\n    // .then(data => \n    //   console.log(data)\n    //   )\n  };\n\n  const handleChange = (e) => {\n    // var name = e.target.name;\n    var value = e.target.value;\n    setActiveItem({...activeItem, title: value})\n    // console.log(activeItem)\n  }\n\n  const handleSubmit = (e) => {\n    let csrftoken = getCookie('csrftoken')\n    e.preventDefault();\n    var url = 'http://127.0.0.1:8000/api/task-create/'\n\n    if (editing === true) {\n      url = `http://127.0.0.1:8000/api/task-update/${activeItem.id}/`\n      setEditing(false)\n    }\n\n    axios.post(url, activeItem, {headers: {'X-CSRFTOKEN': csrftoken}},)\n    .then(() =>{ \n      fetchTask()\n      setActiveItem({id: null, title: '', completed:false} )\n      // console.log(res)\n    }).catch(err => console.log(err))\n    // fetch(url, {\n    //   method: 'POST',\n    //   headers:{\n    //     'Content-type':'application/json',\n    //     'X-CSRFToken':csrftoken,\n    //   },\n    //   body: JSON.stringify(activeItem)\n    // }).then(res => {\n    //   fetchTask()\n    //   setActiveItem({id: null, title: '', completed:false})\n    //   console.log(res)\n    // }).catch(err => console.log(err))\n\n    document.getElementById('form').reset()\n  }\n\n  const startEdit = task =>{\n    setActiveItem(task)\n    setEditing(true)\n    // console.log('start item: ',activeItem)\n    // console.log('editing: ', editing)\n  }\n\n  const deleteItem =task => {\n    let csrftoken = getCookie('csrftoken')\n    let url = `http://127.0.0.1:8000/api/task-delete/${task.id}/`\n    axios.delete(url, {headers: {'X-CSRFTOKEN': csrftoken}}, )\n    .then(() => {\n      fetchTask();\n      // console.log(res)\n    })\n    .catch(err => console.log(err))\n  }\n\n  const strikeUnstrike = task => {\n    task.completed = !task.completed;\n    let csrftoken = getCookie('csrftoken')\n    let url = `http://127.0.0.1:8000/api/task-update/${task.id}/`\n    let taskUpdate = {\n      title: task.title,\n      completed: task.completed\n    }\n    axios.post(url, taskUpdate, {headers: {'X-CSRFTOKEN': csrftoken}},)\n    .then(() => {\n      fetchTask();\n      // console.log(res)\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      <div id=\"task-container\">\n        <div  id=\"form-wrapper\">\n          <form onSubmit={handleSubmit} id=\"form\">\n            <div className=\"flex-wrapper\">\n              <div style={{flex: 6}}>\n                  <input onChange={handleChange} className=\"form-control\" id=\"title\" value={activeItem.title}  type=\"text\" name=\"title\" placeholder=\"Add task..\" />\n                </div>\n\n                <div style={{flex: 1}}>\n                  <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"Add\" />\n                </div>\n            </div>\n          </form>\n      \n        </div>\n        <div id=\"list-wrapper\">\n          {todoList.map((task, index) => {\n            return(\n              <div key={index} className=\"task-wrapper flex-wrapper\">\n                <div onClick={() => strikeUnstrike(task)} style={{flex:7}}>\n                  {task.completed === false ? (<span>{task.title}</span>) : (<strike>{task.title}</strike>)}\n                </div>\n                <div style={{flex:1}}>\n                  <button onClick={() => startEdit(task)}  className=\"btn btn-sm btn-outline-info\">Edit</button>\n                </div>\n\n                <div style={{flex:1}}>\n                    <button onClick={() => deleteItem(task)} className=\"btn btn-sm btn-outline-dark delete\">del</button>\n                </div>\n\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}